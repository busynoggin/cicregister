plugin.tx_cicregister {
	view {
		templateRootPath = {$plugin.tx_cicregister.view.templateRootPath}
		partialRootPath = {$plugin.tx_cicregister.view.partialRootPath}
		layoutRootPath = {$plugin.tx_cicregister.view.layoutRootPath}
	}
	settings {
		views {
			new {
				disableAjax = 0
				formTargetPid = {$plugin.tx_cicregister.settings.pids.newView}
			}
		}
		defaults {
			globalGroupId = {$plugin.tx_cicregister.settings.uids.globalGroupId}
		}
		pids {
			editView = {$plugin.tx_cicregister.settings.pids.editView}
			loginView = {$plugin.tx_cicregister.settings.pids.loginView}
		}
		login {
			returnMessages {
				1 = This is a sample redirect message. Reference the key in the &return_msg GET/POST variable.
			}
			allowForgotPassword = 1
			honorRedirectUrlArgument = 1
			postLoginRedirectPid = {$plugin.tx_cicregister.settings.pids.logoutView}
		}
		behaviors {
			login {
				forgotPassword {
					Tx_Cicregister_Behaviors_SendForgotPasswordEmail = 1
					Tx_Cicregister_Behaviors_SendForgotPasswordEmail {
						senderEmail = {$plugin.tx_cicregister.settings.email.senderEmail}
						senderName = {$plugin.tx_cicregister.settings.email.senderName}
						validateSubject = {$plugin.tx_cicregister.settings.email.subjects.forgotPassword}
						variables {
							siteName = {$plugin.tx_cicregister.settings.strings.siteName}
							validatePid = {$plugin.tx_cicregister.settings.pids.editView}
						}
					}
				}
			}
			frontendUser {
				validationEmailSend {
					Tx_Cicregister_Behaviors_SendValidationEmail = 1
					Tx_Cicregister_Behaviors_SendValidationEmail {
						senderEmail = {$plugin.tx_cicregister.settings.email.senderEmail}
						senderName = {$plugin.tx_cicregister.settings.email.senderName}
						validateSubject = {$plugin.tx_cicregister.settings.email.subjects.validateAccount}
						variables {
							message = {$plugin.tx_cicregister.settings.email.validationEmailSend.message}
							siteName = {$plugin.tx_cicregister.settings.strings.siteName}
							validatePid = {$plugin.tx_cicregister.settings.pids.editView}
						}
					}
				}
				emailValidationSuccess {
					Tx_Cicregister_Behaviors_SyncToSalesforce = 0
				}
				emailValidationFailure {
				}
				updated {
					Tx_Cicregister_Behaviors_SyncToSalesforce = 0
				}
				created {
					Tx_Cicregister_Behaviors_SendValidationEmail = 1
					Tx_Cicregister_Behaviors_SendValidationEmail {
						senderEmail = {$plugin.tx_cicregister.settings.email.senderEmail}
						senderName = {$plugin.tx_cicregister.settings.email.senderName}
						validateSubject = {$plugin.tx_cicregister.settings.email.subjects.validateAccount}
						variables {
							message = {$plugin.tx_cicregister.settings.email.create.message}
							siteName = {$plugin.tx_cicregister.settings.strings.siteName}
							validatePid = {$plugin.tx_cicregister.settings.pids.editView}
						}
					}
					Tx_Cicregister_Behaviors_AddFlashMessage = 0
					Tx_Cicregister_Behaviors_AddFlashMessage {
						severity =
						title = Sign-up Successful!
						message = Thank you for signing up with {$plugin.tx_cicregister.settings.strings.siteName}
					}
					Tx_Cicregister_Behaviors_AuthenticateUser = 1
					Tx_Cicregister_Behaviors_AuthenticateUser {
						forwardAction =
						forwardPid = {$plugin.tx_cicregister.settings.pids.logoutView}
						feuserPid =  {$plugin.tx_cicregister.settings.pids.storagePid}
					}
				}
			}
		}
		decorators {
			frontendUser {
				created {
					Tx_Cicregister_Decorators_Disable = 0
					Tx_Cicregister_Decorators_AddToGroup = 1
					Tx_Cicregister_Decorators_AddToGroup {
						groupUid = {$plugin.tx_cicregister.settings.uids.unvalidatedGroupId}
					}
				}
				emailValidated {
					Tx_Cicregister_Decorators_Enable = 1
					Tx_Cicregister_Decorators_AddToGroup {
						groupUid = {$plugin.tx_cicregister.settings.uids.validatedGroupId}
					}
					Tx_Cicregister_Decorators_RemoveFromGroup = 1
					Tx_Cicregister_Decorators_RemoveFromGroup {
						groupUid = {$plugin.tx_cicregister.settings.uids.unvalidatedGroupId}
					}
				}
				edited {
				}
			}
		}
	}
	persistence {
		storagePid = {$plugin.tx_cicregister.settings.pids.storagePid}
	}
	features {
		rewrittenPropertyMapper = 1
	}
}

config.tx_extbase {
	objects {
		Tx_Extbase_Domain_Repository_FrontendUserRepository {
			className = Tx_Cicregister_Domain_Repository_GlobalFrontendUserRepository
		}
	}
	persistence {
		classes {
			Tx_Extbase_Domain_Model_FrontendUserGroup {
				mapping {
					tableName = fe_groups
					recordType = Tx_Extbase_Domain_Model_FrontendUserGroup
				}
				subclasses {
					Tx_Cicregister_Domain_Model_FrontendUserGroup = Tx_Cicregister_Domain_Model_FrontendUserGroup
				}
			}
			Tx_Extbase_Domain_Model_FrontendUser {
				mapping {
					tableName = fe_users
					recordType = Tx_Extbase_Domain_Model_FrontendUser
					columns {
						lockToDomain.mapOnProperty = lockToDomain
					}
				}
				subclasses {
					Tx_Cicregister_Domain_Model_FrontendUser = Tx_Cicregister_Domain_Model_FrontendUser
				}
			}
			Tx_Cicregister_Domain_Model_FrontendUserGroup {
				mapping {
					tableName = fe_groups
					recordType = Tx_Cicregister_Domain_Model_FrontendUserGroup
					columns {
						tx_cicregister_enrollment_code.mapOnProperty = enrollmentCode
					}
				}
			}
			Tx_Cicregister_Domain_Model_FrontendUser {
				mapping {
					tableName = fe_users
					recordType = Tx_Cicregister_Domain_Model_FrontendUser
					columns {
						tx_cicregister_sfdc_contact_id.mapOnProperty = sfdcContactID
						tx_cicregister_sfdc_lead_id.mapOnProperty = sfdcLeadID
						tx_cicregister_sfdc_sync_timestamp.mapOnProperty = sfdcSyncTimestamp
						tx_cicregister_state.mapOnProperty = state
					}
				}
			}
		}
	}
}

Tx_Cicregister_JSON_RequestPage = PAGE
Tx_Cicregister_JSON_RequestPage {
    typeNum = {$plugin.tx_cicregister.settings.eidTypeNum}
    config {
        disableAllHeaderCode = 1
        xhtml_cleaning = 0
        admPanel = 0
            debug = 0
            no_cache = 1
        additionalHeaders = Content-type:application/json
    }
	10 = USER_INT
	10 {
		userFunc = tx_extbase_core_bootstrap->run
		extensionName = Cicregister
		pluginName = Create
		switchableControllerActions {
			FrontendUserJSON {
				1 = create
				2 = createConfirmationMustValidate
			}
		}
	}
}

config {
	# The validation email links to the edit profile page, which is often set so that it is
	# only visible to a logged in user. This rather obscure Typoscript property makes it
	# possible for Extbase to link to an access restricted page. Moreover, we tend to think
	# that this is a good site-wide default. Why would you want to show an anonymous user
	# text that wasn't linked? Better not to show the content element at all, but to let it
	# renderd the same accross contexts.
	typolinkLinkAccessRestrictedPages = NONE
}

page.includeCSS {
	89179817291 = EXT:cicregister/Resources/Public/Stylesheet/Cicregister.css
}

page.includeJSFooterlibs {
	jquery = //ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.js
	jquery.external = 1
}

page.includeJSFooter {
	colorbox = EXT:cicregister/Resources/Public/Javascript/Jquery-Colorbox-min.js
	bootstrap-button = EXT:cicregister/Resources/Public/Javascript/bootstrap-button.js
	cicregister = EXT:cicregister/Resources/Public/Javascript/Cicregister.js
}

plugin.tx_cicregister._CSS_DEFAULT_STYLE (
)